version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - "5672:5672" # Puerto estándar de RabbitMQ
      - "15672:15672" # Puerto para el panel de administración de RabbitMQ      
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - poc-outbox-network

  sqlserver:
    image: mcr.microsoft.com/mssql/server:latest
    environment:
      SA_PASSWORD: ${MSSQL_SA_PASSWORD}
      ACCEPT_EULA: ${MSSQL_ACCEPT_EULA}
    ports:
      - "1433:1433"      
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - poc-outbox-network

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"    
    volumes:
      - mongodb_data:/data/db
    networks:
      - poc-outbox-network

  eventhandlers:
    build:
      context: ./src/EventHandlers
      dockerfile: Dockerfile
    networks:
      - poc-outbox-network
    depends_on:
      - rabbitmq
      - sqlserver
      - mongodb

  microservice.command:
    build:
      context: ./src/Microservice.Command
      dockerfile: Dockerfile
    networks:
      - poc-outbox-network
    depends_on:
      - rabbitmq
      - sqlserver
      - mongodb

  microservice.query:
    build:
      context: ./src/Microservice.Query
      dockerfile: Dockerfile
    networks:
      - poc-outbox-network
    depends_on:
      - rabbitmq
      - sqlserver
      - mongodb

networks:
  poc-outbox-network:
    driver: bridge

volumes:
  rabbitmq_data:
  sqlserver_data:
  mongodb_data:
